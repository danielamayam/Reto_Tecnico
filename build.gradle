plugins {
    id "net.serenity-bdd.serenity-gradle-plugin" version "4.0.27"
    id 'java'
    id 'idea'
}

group = 'org.example'
version = '1'

ext {
    serenityCoreVersion = '4.0.44'
    junitVersion = '5.10.0'
    slf4jVersion='2.0.6'
}

repositories {
    mavenCentral()
}

defaultTasks 'clean','test','aggregate'

dependencies {
    implementation "net.serenity-bdd:serenity-cucumber:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}"
    testImplementation "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-core:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-junit:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-cucumber:${serenityCoreVersion}",
            "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
            "org.slf4j:slf4j-simple:${slf4jVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}


test {
    def hasPropertyValue = project.hasProperty('runner')
    if (hasPropertyValue) {
        systemProperty "runner", findProperty("runner")
        def runner = "${runner}".split(",")
        for (run in runner) {
            include "**/" + run + ".class"
        }
    } else {
        println 'Run all test'
    }
}
gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)


